# 晚期绑定：始终从实例（self）所属的类开始搜索方法，即使在超类实现的类中调用也是如此
# 1. Python写出来的每个方法都像虚方法那样在晚期绑定，但是 C语言（Cpython）实现的内置对象拥有的方法似乎默认是非虚方法（编译时绑定）
# 2. 因此，直接继承内置类型并改写其方法，是不会被调用的。
# 3. 如果需要子类化内置类型，建议使用 collections.UserDict、collections.UserList 之类的
